//buildscript {
//    repositories {
//        mavenLocal()
//        jcenter()
//    }
//}
//plugins {
//    id "com.jfrog.bintray"
//    id "maven-publish"
//    id "java"
//    id 'idea'
//    //id 'signing'
//}

//https://reflectoring.io/guide-publishing-to-bintray-with-gradle/

//apply plugin: 'idea'
//apply plugin: 'eclipse'
// Signing
//apply plugin: 'signing'
//signing {
//    sign configurations.archives
//}
//http://weibeld.net/java/publish-to-maven-central.html


// Add Javadoc JAR and sources JAR to artifact
//javadoc.failOnError = false
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc
//}

//task sourcesJar(type: Jar, dependsOn: classes) {
//    classifier = 'sources'
//    from sourceSets.main.allSource
//}

//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}


//group = 'io.github.samuel-davis'
//archivesBaseName = project.name
//version = '1.0.4'


sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

//install {
//    repositories.mavenInstaller {
//        pom.artifactId = 'nifi-api-client-java'
//    }
//}

task execute(type: JavaExec) {
    main = System.getProperty('mainClass')
    classpath = sourceSets.main.runtimeClasspath
}


dependencies {
    compile 'io.swagger:swagger-annotations:1.5.8'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.squareup.okhttp:logging-interceptor:2.7.5'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'joda-time:joda-time:2.9.3'
    testCompile 'junit:junit:4.12'
}

//
def pomConfig = {
    scm {
        //connection 'scm:git:git://github.com/samuel-davis/ossrh.git'
        //developerConnection 'scm:git:git@github.com:samuel-davis/ossrh.git'
        url 'https://github.com/samuel-davis/ossrh'
    }

    licenses {
        license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }

    developers {
        developer {
            id 'sam'
            name 'Sam Davis'
            email 'codehounded@gmail.com'
            organization 'OpenSource'
            organizationUrl 'https://samuel-davis.github.io'
        }
    }

}
//
//publishing {
//    publications {
//        mavenPublication(MavenPublication) {
//            from components.java
////            artifact sourcesJar {
////                classifier "sources"
////            }
////            artifact javadocJar {
////                classifier "javadoc"
////            }
//            groupId 'io.github.samuel-davis'
//            artifactId 'nifi-api-client-java'
//            version project.version
//            pom.withXml {
//                def root = asNode()
//                root.appendNode('description', 'Easy to use api for NIFI REST api')
//                root.appendNode('packaging', 'jar')
//                root.appendNode('name',  project.name)
//                root.appendNode('url', 'https://github.com/samuel-davis/ossrh')
//                root.children().last() + pomConfig
//            }
//        }
//    }
//}

//bintray {
//    user = 'codehounded'
//    key = bintray_key
//
//    publications = ['mavenPublication']
//    override = true
//    publish = true
//    pkg {
//        repo = 'open'
//        name = project.name
//        userOrg = 'codehounded'
//        licenses = ['Apache-2.0']
//        websiteUrl = 'https://samuel-davis.github.io'
//        vcsUrl = 'https://github.com/samuel-davis/ossrh.git'
//        issueTrackerUrl = 'https://github.com/samuel-davis/ossrh/issues'
//        publicDownloadNumbers = true
//        githubRepo = 'samuel-davis/ossrh'
//        version {
//            name = project.version
//            released  = new Date()
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                // Uses configured GPG keys in bintray
//            }
//
//            // Its linked to Jcenter online, so it automatically propogates to Maven central
//            /*mavenCentralSync {
//                sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
//                user = ossrhUsername //OSS user token
//                password = ossrhPassword //OSS user password
//                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
//            }*/
//        }
//    }
//
//}

// ///Build, sign, and upload
//uploadArchives {
//    repositories {
//        mavenDeployer {
//
//            // Sign POM
//            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//            // Destination
//            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//
//            // Add required metadata to POM
//            pom.project {
//                name 'Nifi Api Client Java'
//                packaging 'jar'
//                description 'Easy to use api for NIFI REST api'
//                url 'https://github.com/samuel-davis/ossrh'
//
//                scm {
//                    connection 'scm:git:git://github.com/samuel-davis/ossrh.git'
//                    developerConnection 'scm:git:git@github.com:samuel-davis/ossrh.git'
//                    url 'https://github.com/samuel-davis/ossrh'
//                }
//
//                licenses {
//                    license {
//                        name 'The Apache License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//
//                developers {
//                    developer {
//                        id 'sam'
//                        name 'Sam Davis'
//                        email 'codehounded@gmail.com'
//                        organization 'OpenSource'
//                        organizationUrl 'https://samuel-davis.github.io'
//                    }
//                }
//            }
//        }
//    }
//}

clean {
    delete new File("$projectDir/target")
}
