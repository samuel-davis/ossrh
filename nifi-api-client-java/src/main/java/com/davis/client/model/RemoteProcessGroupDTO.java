/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.davis.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;

/**
 * RemoteProcessGroupDTO
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-10-14T11:52:34.905+11:00")
public class RemoteProcessGroupDTO {
  @SerializedName("id")
  private String id = null;

  @SerializedName("parentGroupId")
  private String parentGroupId = null;

  @SerializedName("position")
  private PositionDTO position = null;

  @SerializedName("targetUri")
  private String targetUri = null;

  @SerializedName("targetSecure")
  private Boolean targetSecure = false;

  @SerializedName("name")
  private String name = null;

  @SerializedName("comments")
  private String comments = null;

  @SerializedName("communicationsTimeout")
  private String communicationsTimeout = null;

  @SerializedName("yieldDuration")
  private String yieldDuration = null;

  @SerializedName("transportProtocol")
  private String transportProtocol = null;

  @SerializedName("proxyHost")
  private String proxyHost = null;

  @SerializedName("proxyPort")
  private Integer proxyPort = null;

  @SerializedName("proxyUser")
  private String proxyUser = null;

  @SerializedName("proxyPassword")
  private String proxyPassword = null;

  @SerializedName("authorizationIssues")
  private List<String> authorizationIssues = new ArrayList<String>();

  @SerializedName("transmitting")
  private Boolean transmitting = false;

  @SerializedName("inputPortCount")
  private Integer inputPortCount = null;

  @SerializedName("outputPortCount")
  private Integer outputPortCount = null;

  @SerializedName("activeRemoteInputPortCount")
  private Integer activeRemoteInputPortCount = null;

  @SerializedName("inactiveRemoteInputPortCount")
  private Integer inactiveRemoteInputPortCount = null;

  @SerializedName("activeRemoteOutputPortCount")
  private Integer activeRemoteOutputPortCount = null;

  @SerializedName("inactiveRemoteOutputPortCount")
  private Integer inactiveRemoteOutputPortCount = null;

  @SerializedName("flowRefreshed")
  private DateTime flowRefreshed = null;

  @SerializedName("contents")
  private RemoteProcessGroupContentsDTO contents = null;

  public RemoteProcessGroupDTO id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the component.
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "The id of the component.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public RemoteProcessGroupDTO parentGroupId(String parentGroupId) {
    this.parentGroupId = parentGroupId;
    return this;
  }

   /**
   * The id of parent process group of this component if applicable.
   * @return parentGroupId
  **/
  @ApiModelProperty(example = "null", value = "The id of parent process group of this component if applicable.")
  public String getParentGroupId() {
    return parentGroupId;
  }

  public void setParentGroupId(String parentGroupId) {
    this.parentGroupId = parentGroupId;
  }

  public RemoteProcessGroupDTO position(PositionDTO position) {
    this.position = position;
    return this;
  }

   /**
   * The position of this component in the UI if applicable.
   * @return position
  **/
  @ApiModelProperty(example = "null", value = "The position of this component in the UI if applicable.")
  public PositionDTO getPosition() {
    return position;
  }

  public void setPosition(PositionDTO position) {
    this.position = position;
  }

  public RemoteProcessGroupDTO targetUri(String targetUri) {
    this.targetUri = targetUri;
    return this;
  }

   /**
   * The target URI of the remote process group.
   * @return targetUri
  **/
  @ApiModelProperty(example = "null", value = "The target URI of the remote process group.")
  public String getTargetUri() {
    return targetUri;
  }

  public void setTargetUri(String targetUri) {
    this.targetUri = targetUri;
  }

  public RemoteProcessGroupDTO targetSecure(Boolean targetSecure) {
    this.targetSecure = targetSecure;
    return this;
  }

   /**
   * Whether the target is running securely.
   * @return targetSecure
  **/
  @ApiModelProperty(example = "null", value = "Whether the target is running securely.")
  public Boolean getTargetSecure() {
    return targetSecure;
  }

  public void setTargetSecure(Boolean targetSecure) {
    this.targetSecure = targetSecure;
  }

  public RemoteProcessGroupDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the remote process group.
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "The name of the remote process group.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RemoteProcessGroupDTO comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * The comments for the remote process group.
   * @return comments
  **/
  @ApiModelProperty(example = "null", value = "The comments for the remote process group.")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public RemoteProcessGroupDTO communicationsTimeout(String communicationsTimeout) {
    this.communicationsTimeout = communicationsTimeout;
    return this;
  }

   /**
   * The time period used for the timeout when commicating with the target.
   * @return communicationsTimeout
  **/
  @ApiModelProperty(example = "null", value = "The time period used for the timeout when commicating with the target.")
  public String getCommunicationsTimeout() {
    return communicationsTimeout;
  }

  public void setCommunicationsTimeout(String communicationsTimeout) {
    this.communicationsTimeout = communicationsTimeout;
  }

  public RemoteProcessGroupDTO yieldDuration(String yieldDuration) {
    this.yieldDuration = yieldDuration;
    return this;
  }

   /**
   * When yielding, this amount of time must elapse before the remote process group is scheduled again.
   * @return yieldDuration
  **/
  @ApiModelProperty(example = "null", value = "When yielding, this amount of time must elapse before the remote process group is scheduled again.")
  public String getYieldDuration() {
    return yieldDuration;
  }

  public void setYieldDuration(String yieldDuration) {
    this.yieldDuration = yieldDuration;
  }

  public RemoteProcessGroupDTO transportProtocol(String transportProtocol) {
    this.transportProtocol = transportProtocol;
    return this;
  }

   /**
   * Get transportProtocol
   * @return transportProtocol
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTransportProtocol() {
    return transportProtocol;
  }

  public void setTransportProtocol(String transportProtocol) {
    this.transportProtocol = transportProtocol;
  }

  public RemoteProcessGroupDTO proxyHost(String proxyHost) {
    this.proxyHost = proxyHost;
    return this;
  }

   /**
   * Get proxyHost
   * @return proxyHost
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getProxyHost() {
    return proxyHost;
  }

  public void setProxyHost(String proxyHost) {
    this.proxyHost = proxyHost;
  }

  public RemoteProcessGroupDTO proxyPort(Integer proxyPort) {
    this.proxyPort = proxyPort;
    return this;
  }

   /**
   * Get proxyPort
   * @return proxyPort
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getProxyPort() {
    return proxyPort;
  }

  public void setProxyPort(Integer proxyPort) {
    this.proxyPort = proxyPort;
  }

  public RemoteProcessGroupDTO proxyUser(String proxyUser) {
    this.proxyUser = proxyUser;
    return this;
  }

   /**
   * Get proxyUser
   * @return proxyUser
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getProxyUser() {
    return proxyUser;
  }

  public void setProxyUser(String proxyUser) {
    this.proxyUser = proxyUser;
  }

  public RemoteProcessGroupDTO proxyPassword(String proxyPassword) {
    this.proxyPassword = proxyPassword;
    return this;
  }

   /**
   * Get proxyPassword
   * @return proxyPassword
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getProxyPassword() {
    return proxyPassword;
  }

  public void setProxyPassword(String proxyPassword) {
    this.proxyPassword = proxyPassword;
  }

  public RemoteProcessGroupDTO authorizationIssues(List<String> authorizationIssues) {
    this.authorizationIssues = authorizationIssues;
    return this;
  }

  public RemoteProcessGroupDTO addAuthorizationIssuesItem(String authorizationIssuesItem) {
    this.authorizationIssues.add(authorizationIssuesItem);
    return this;
  }

   /**
   * Any remote authorization issues for the remote process group.
   * @return authorizationIssues
  **/
  @ApiModelProperty(example = "null", value = "Any remote authorization issues for the remote process group.")
  public List<String> getAuthorizationIssues() {
    return authorizationIssues;
  }

  public void setAuthorizationIssues(List<String> authorizationIssues) {
    this.authorizationIssues = authorizationIssues;
  }

  public RemoteProcessGroupDTO transmitting(Boolean transmitting) {
    this.transmitting = transmitting;
    return this;
  }

   /**
   * Whether the remote process group is actively transmitting.
   * @return transmitting
  **/
  @ApiModelProperty(example = "null", value = "Whether the remote process group is actively transmitting.")
  public Boolean getTransmitting() {
    return transmitting;
  }

  public void setTransmitting(Boolean transmitting) {
    this.transmitting = transmitting;
  }

  public RemoteProcessGroupDTO inputPortCount(Integer inputPortCount) {
    this.inputPortCount = inputPortCount;
    return this;
  }

   /**
   * The number of remote input ports currently available on the target.
   * @return inputPortCount
  **/
  @ApiModelProperty(example = "null", value = "The number of remote input ports currently available on the target.")
  public Integer getInputPortCount() {
    return inputPortCount;
  }

  public void setInputPortCount(Integer inputPortCount) {
    this.inputPortCount = inputPortCount;
  }

  public RemoteProcessGroupDTO outputPortCount(Integer outputPortCount) {
    this.outputPortCount = outputPortCount;
    return this;
  }

   /**
   * The number of remote output ports currently available on the target.
   * @return outputPortCount
  **/
  @ApiModelProperty(example = "null", value = "The number of remote output ports currently available on the target.")
  public Integer getOutputPortCount() {
    return outputPortCount;
  }

  public void setOutputPortCount(Integer outputPortCount) {
    this.outputPortCount = outputPortCount;
  }

  public RemoteProcessGroupDTO activeRemoteInputPortCount(Integer activeRemoteInputPortCount) {
    this.activeRemoteInputPortCount = activeRemoteInputPortCount;
    return this;
  }

   /**
   * The number of active remote input ports.
   * @return activeRemoteInputPortCount
  **/
  @ApiModelProperty(example = "null", value = "The number of active remote input ports.")
  public Integer getActiveRemoteInputPortCount() {
    return activeRemoteInputPortCount;
  }

  public void setActiveRemoteInputPortCount(Integer activeRemoteInputPortCount) {
    this.activeRemoteInputPortCount = activeRemoteInputPortCount;
  }

  public RemoteProcessGroupDTO inactiveRemoteInputPortCount(Integer inactiveRemoteInputPortCount) {
    this.inactiveRemoteInputPortCount = inactiveRemoteInputPortCount;
    return this;
  }

   /**
   * The number of inactive remote input ports.
   * @return inactiveRemoteInputPortCount
  **/
  @ApiModelProperty(example = "null", value = "The number of inactive remote input ports.")
  public Integer getInactiveRemoteInputPortCount() {
    return inactiveRemoteInputPortCount;
  }

  public void setInactiveRemoteInputPortCount(Integer inactiveRemoteInputPortCount) {
    this.inactiveRemoteInputPortCount = inactiveRemoteInputPortCount;
  }

  public RemoteProcessGroupDTO activeRemoteOutputPortCount(Integer activeRemoteOutputPortCount) {
    this.activeRemoteOutputPortCount = activeRemoteOutputPortCount;
    return this;
  }

   /**
   * The number of acitve remote output ports.
   * @return activeRemoteOutputPortCount
  **/
  @ApiModelProperty(example = "null", value = "The number of acitve remote output ports.")
  public Integer getActiveRemoteOutputPortCount() {
    return activeRemoteOutputPortCount;
  }

  public void setActiveRemoteOutputPortCount(Integer activeRemoteOutputPortCount) {
    this.activeRemoteOutputPortCount = activeRemoteOutputPortCount;
  }

  public RemoteProcessGroupDTO inactiveRemoteOutputPortCount(Integer inactiveRemoteOutputPortCount) {
    this.inactiveRemoteOutputPortCount = inactiveRemoteOutputPortCount;
    return this;
  }

   /**
   * The number of inactive remote output ports.
   * @return inactiveRemoteOutputPortCount
  **/
  @ApiModelProperty(example = "null", value = "The number of inactive remote output ports.")
  public Integer getInactiveRemoteOutputPortCount() {
    return inactiveRemoteOutputPortCount;
  }

  public void setInactiveRemoteOutputPortCount(Integer inactiveRemoteOutputPortCount) {
    this.inactiveRemoteOutputPortCount = inactiveRemoteOutputPortCount;
  }

  public RemoteProcessGroupDTO flowRefreshed(DateTime flowRefreshed) {
    this.flowRefreshed = flowRefreshed;
    return this;
  }

   /**
   * The timestamp when this remote process group was last refreshed.
   * @return flowRefreshed
  **/
  @ApiModelProperty(example = "null", value = "The timestamp when this remote process group was last refreshed.")
  public DateTime getFlowRefreshed() {
    return flowRefreshed;
  }

  public void setFlowRefreshed(DateTime flowRefreshed) {
    this.flowRefreshed = flowRefreshed;
  }

  public RemoteProcessGroupDTO contents(RemoteProcessGroupContentsDTO contents) {
    this.contents = contents;
    return this;
  }

   /**
   * The contents of the remote process group. Will contain available input/output ports.
   * @return contents
  **/
  @ApiModelProperty(example = "null", value = "The contents of the remote process group. Will contain available input/output ports.")
  public RemoteProcessGroupContentsDTO getContents() {
    return contents;
  }

  public void setContents(RemoteProcessGroupContentsDTO contents) {
    this.contents = contents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteProcessGroupDTO remoteProcessGroupDTO = (RemoteProcessGroupDTO) o;
    return Objects.equals(this.id, remoteProcessGroupDTO.id) &&
        Objects.equals(this.parentGroupId, remoteProcessGroupDTO.parentGroupId) &&
        Objects.equals(this.position, remoteProcessGroupDTO.position) &&
        Objects.equals(this.targetUri, remoteProcessGroupDTO.targetUri) &&
        Objects.equals(this.targetSecure, remoteProcessGroupDTO.targetSecure) &&
        Objects.equals(this.name, remoteProcessGroupDTO.name) &&
        Objects.equals(this.comments, remoteProcessGroupDTO.comments) &&
        Objects.equals(this.communicationsTimeout, remoteProcessGroupDTO.communicationsTimeout) &&
        Objects.equals(this.yieldDuration, remoteProcessGroupDTO.yieldDuration) &&
        Objects.equals(this.transportProtocol, remoteProcessGroupDTO.transportProtocol) &&
        Objects.equals(this.proxyHost, remoteProcessGroupDTO.proxyHost) &&
        Objects.equals(this.proxyPort, remoteProcessGroupDTO.proxyPort) &&
        Objects.equals(this.proxyUser, remoteProcessGroupDTO.proxyUser) &&
        Objects.equals(this.proxyPassword, remoteProcessGroupDTO.proxyPassword) &&
        Objects.equals(this.authorizationIssues, remoteProcessGroupDTO.authorizationIssues) &&
        Objects.equals(this.transmitting, remoteProcessGroupDTO.transmitting) &&
        Objects.equals(this.inputPortCount, remoteProcessGroupDTO.inputPortCount) &&
        Objects.equals(this.outputPortCount, remoteProcessGroupDTO.outputPortCount) &&
        Objects.equals(this.activeRemoteInputPortCount, remoteProcessGroupDTO.activeRemoteInputPortCount) &&
        Objects.equals(this.inactiveRemoteInputPortCount, remoteProcessGroupDTO.inactiveRemoteInputPortCount) &&
        Objects.equals(this.activeRemoteOutputPortCount, remoteProcessGroupDTO.activeRemoteOutputPortCount) &&
        Objects.equals(this.inactiveRemoteOutputPortCount, remoteProcessGroupDTO.inactiveRemoteOutputPortCount) &&
        Objects.equals(this.flowRefreshed, remoteProcessGroupDTO.flowRefreshed) &&
        Objects.equals(this.contents, remoteProcessGroupDTO.contents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, parentGroupId, position, targetUri, targetSecure, name, comments, communicationsTimeout, yieldDuration, transportProtocol, proxyHost, proxyPort, proxyUser, proxyPassword, authorizationIssues, transmitting, inputPortCount, outputPortCount, activeRemoteInputPortCount, inactiveRemoteInputPortCount, activeRemoteOutputPortCount, inactiveRemoteOutputPortCount, flowRefreshed, contents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteProcessGroupDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parentGroupId: ").append(toIndentedString(parentGroupId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    targetUri: ").append(toIndentedString(targetUri)).append("\n");
    sb.append("    targetSecure: ").append(toIndentedString(targetSecure)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    communicationsTimeout: ").append(toIndentedString(communicationsTimeout)).append("\n");
    sb.append("    yieldDuration: ").append(toIndentedString(yieldDuration)).append("\n");
    sb.append("    transportProtocol: ").append(toIndentedString(transportProtocol)).append("\n");
    sb.append("    proxyHost: ").append(toIndentedString(proxyHost)).append("\n");
    sb.append("    proxyPort: ").append(toIndentedString(proxyPort)).append("\n");
    sb.append("    proxyUser: ").append(toIndentedString(proxyUser)).append("\n");
    sb.append("    proxyPassword: ").append(toIndentedString(proxyPassword)).append("\n");
    sb.append("    authorizationIssues: ").append(toIndentedString(authorizationIssues)).append("\n");
    sb.append("    transmitting: ").append(toIndentedString(transmitting)).append("\n");
    sb.append("    inputPortCount: ").append(toIndentedString(inputPortCount)).append("\n");
    sb.append("    outputPortCount: ").append(toIndentedString(outputPortCount)).append("\n");
    sb.append("    activeRemoteInputPortCount: ").append(toIndentedString(activeRemoteInputPortCount)).append("\n");
    sb.append("    inactiveRemoteInputPortCount: ").append(toIndentedString(inactiveRemoteInputPortCount)).append("\n");
    sb.append("    activeRemoteOutputPortCount: ").append(toIndentedString(activeRemoteOutputPortCount)).append("\n");
    sb.append("    inactiveRemoteOutputPortCount: ").append(toIndentedString(inactiveRemoteOutputPortCount)).append("\n");
    sb.append("    flowRefreshed: ").append(toIndentedString(flowRefreshed)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

