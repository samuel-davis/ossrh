/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.davis.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

/**
 * AboutDTO
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-10-14T11:52:34.905+11:00")
public class AboutDTO {
  @SerializedName("title")
  private String title = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("uri")
  private String uri = null;

  @SerializedName("contentViewerUrl")
  private String contentViewerUrl = null;

  @SerializedName("timezone")
  private DateTime timezone = null;

  public AboutDTO title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title to be used on the page and in the about dialog.
   * @return title
  **/
  @ApiModelProperty(example = "null", value = "The title to be used on the page and in the about dialog.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public AboutDTO version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The version of this NiFi.
   * @return version
  **/
  @ApiModelProperty(example = "null", value = "The version of this NiFi.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public AboutDTO uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * The URI for the NiFi.
   * @return uri
  **/
  @ApiModelProperty(example = "null", value = "The URI for the NiFi.")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public AboutDTO contentViewerUrl(String contentViewerUrl) {
    this.contentViewerUrl = contentViewerUrl;
    return this;
  }

   /**
   * The URL for the content viewer if configured.
   * @return contentViewerUrl
  **/
  @ApiModelProperty(example = "null", value = "The URL for the content viewer if configured.")
  public String getContentViewerUrl() {
    return contentViewerUrl;
  }

  public void setContentViewerUrl(String contentViewerUrl) {
    this.contentViewerUrl = contentViewerUrl;
  }

   /**
   * The timezone of the NiFi instance.
   * @return timezone
  **/
  @ApiModelProperty(example = "null", value = "The timezone of the NiFi instance.")
  public DateTime getTimezone() {
    return timezone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AboutDTO aboutDTO = (AboutDTO) o;
    return Objects.equals(this.title, aboutDTO.title) &&
        Objects.equals(this.version, aboutDTO.version) &&
        Objects.equals(this.uri, aboutDTO.uri) &&
        Objects.equals(this.contentViewerUrl, aboutDTO.contentViewerUrl) &&
        Objects.equals(this.timezone, aboutDTO.timezone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, version, uri, contentViewerUrl, timezone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AboutDTO {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    contentViewerUrl: ").append(toIndentedString(contentViewerUrl)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

